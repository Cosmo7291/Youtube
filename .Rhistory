install.packages("rmarkdown", dep = TRUE)
install.packages("tinytex")
tinytex::install_tinytex()  # install TinyTeX
```{r}
# Load necessary packages
library(dplyr)
# Load necessary libraries
library(dplyr)
# Load datasets
global_youtube <- read.csv("global_youtube_statistics.csv")
top_artists <- read.csv("top_youtube_artists.csv")
# Load necessary packages
library(dplyr)
# Load necessary libraries
library(dplyr)
# Load datasets
global_youtube <- read.csv("global_youtube_statistics.csv")
top_artists <- read.csv("topyoutube.csv")
top_videos <- read.csv("Top_14_Ever_Most_Viewed_YouTube_Videos.csv")
# Check the structure of datasets
str(global_youtube)
str(top_artists)
str(top_videos)
# Merge datasets
# Assuming there are common variables to merge on, such as Youtuber/Artist/Channel Name
merged_data <- merge(global_youtube, top_artists, by.x = "Youtuber", by.y = "Artist", all = TRUE)
merged_data <- merge(merged_data, top_videos, by.x = "Youtuber", by.y = "Channel Name", all = TRUE)
```{r}
# Load necessary packages
library(dplyr)
# Load necessary libraries
library(dplyr)
# Load necessary packages
library(dplyr)
# Load necessary libraries
library(dplyr)
# Load datasets
global_youtube <- read.csv("global_youtube_statistics.csv")
top_artists <- read.csv("topyoutube.csv")
top_videos <- read.csv("Top_14_Ever_Most_Viewed_YouTube_Videos.csv")
# Check the structure of datasets
str(global_youtube)
str(top_artists)
str(top_videos)
# Merge datasets
# Assuming there are common variables to merge on, such as Youtuber/Artist/Channel Name
merged_data <- merge(global_youtube, top_artists, by.x = "Youtuber", by.y = "Artist", all = TRUE)
merged_data <- merge(merged_data, top_videos, by.x = "Youtuber", by.y = "Channel Name", all = TRUE)
merged_data <- merge(merged_data, top_videos, by.x = "Youtuber", by.y = "Channel Name", all = TRUE)
merged_data <- merge(merged_data, top_videos, by.x = "Youtuber", by.y = "Channel_Name", all = TRUE)
merged_data <- merge(merged_data, top_videos, by.x = "Youtuber", by.y = "Description", all = TRUE)
merged_data <- merge(merged_data, top_videos, by.x = "Youtuber", by.y = "Channel_Name", all = TRUE)
merged_data <- merge(merged_data, top_videos, by.x = "Youtuber", by.y = "Description", all = TRUE)
# Check the structure of merged dataset
str(merged_data)
summary(merged_data)
# Create visualizations
# For example, you can create a scatterplot of subscribers vs total views
plot(merged_data$subscribers, merged_data$Total_Views_100M, xlab = "Subscribers", ylab = "Total Views")
# Conduct statistical analysis
# For example, you can perform correlation analysis
correlation <- cor(merged_data$subscribers, merged_data$Total_Views_100M)
ggplot(merged_data, aes(x = subscribers, y = Total_Views_100M)) +
geom_point(color = "darkblue") +
labs(title = "Subscribers vs Total Views",
x = "Subscribers", y = "Total Views") +
theme_minimal()
# Create visualizations
ggplot(merged_data, aes(x = subscribers, y = Total_Views_100M)) +
geom_point(color = "darkblue") +
labs(title = "Subscribers vs Total Views",
x = "Subscribers", y = "Total.Views") +
theme_minimal()
# Create visualizations
library(ggplot2)
ggplot(merged_data, aes(x = subscribers, y = Total_Views_100M)) +
geom_point(color = "darkblue") +
labs(title = "Subscribers vs Total Views",
x = "Subscribers", y = "Total Views") +
theme_minimal()
library(ggplot2)
ggplot(merged_data, aes(x = subscribers, y = video.views)) +
geom_point(color = "darkblue") +
labs(title = "Subscribers vs Total Views",
x = "Subscribers", y = "Total Views") +
theme_minimal()
# Additional analysis based on the specific context and questions of interest
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Plot 1: Bar plot showing the number of uploads per category
ggplot(merged_data, aes(x = category)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Number of Uploads per Category",
x = "Category", y = "Number of Uploads") +
theme_minimal()
# Create visualizations
library(ggplot2)
ggplot(merged_data, aes(x = subscribers, y = video.views)) +
geom_point(color = "darkblue") +
labs(title = "Subscribers vs Total Views",
x = "Subscribers", y = "Total Views") +
theme_minimal()
# Additional analysis based on the specific context and questions of interest
```{# Load necessary libraries}
# Plot 1: Bar plot showing the number of uploads per category
ggplot(merged_data, aes(x = category)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Number of Uploads per Category",
x = "Category", y = "Number of Uploads") +
theme_minimal()
library(dplyr)
library(ggplot2)
ggplot(merged_data, aes(x = category)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Number of Uploads per Category",
x = "Category", y = "Number of Uploads") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Attempt to read the CSV file with error handling
data <- tryCatch(
{
read.csv("Top_14_Ever_Most_Viewed_YouTube_Videos.csv")
},
error = function(e) {
message("Error reading CSV file: ", e$message)
NULL  # return NULL or handle the error appropriately
}
)
if (!is.null(data)) {
# Continue processing with the data
} else {
# Handle the error case appropriately
}
# Load datasets
global_youtube <- read.csv("global_youtube_statistics.csv")
top_artists <- read.csv("topyoutube.csv")
top_videos <- read.csv("Top_14_Ever_Most_Viewed_YouTube_Videos.csv" )
---
title: "Youtube Stats Assignment"
# Load datasets
global_youtube <- read.csv("global_youtube_statistics.csv")
top_artists <- read.csv("topyoutube.csv")
top_videos <- read.csv("Top_14_Ever_Most_Viewed_YouTube_Videos.csv" )
# Load necessary packages
library(dplyr)
# Load necessary libraries
library(dplyr)
```{r}
# Plot 2: Scatterplot showing the relationship between subscribers and video views
ggplot(merged_data, aes(x = subscribers, y = video_views)) +
geom_point(color = "darkred") +
labs(title = "Subscribers vs. Video Views",
x = "Subscribers", y = "video.views") +
theme_minimal()
# Plot 2: Scatterplot showing the relationship between subscribers and video views
ggplot(merged_data, aes(x = subscribers, y = video.views)) +
geom_point(color = "darkred") +
labs(title = "Subscribers vs. Video Views",
x = "Subscribers", y = "video.views") +
theme_minimal()
# Check the structure of merged dataset
str(merged_data)
# Plot 3: Box plot showing the distribution of total views by category
ggplot(merged_data, aes(x = category, y = Total.Views)) +
geom_boxplot(fill = "lightgreen", color = "darkgreen") +
labs(title = "Distribution of Total Views by Category",
x = "Category", y = "Total Views") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create visualizations
library(ggplot2)
ggplot(merged_data, aes(x = subscribers, y = video.views)) +
geom_point(color = "darkblue") +
labs(title = "Subscribers vs Total Views",
x = "Subscribers", y = "Total Views") +
theme_minimal()
# Additional analysis based on the specific context and questions of interest
```{r}
